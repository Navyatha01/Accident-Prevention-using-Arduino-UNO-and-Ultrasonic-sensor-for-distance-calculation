#include <LiquidCrystal.h>

const int trig_pin = 9;
const int echo_pin = 10;
const int buzzer_pin = 11;
const int ledPin = 13;

int distance_cm;
long duration;

const int rs = 12, en = 6, d4 = 5, d5 = 4, d6 = 3, d7 = 2;
LiquidCrystal lcd(rs, en, d4, d5, d6, d7);

void setup() {
  lcd.begin(16, 2);
  lcd.setCursor(0, 0);
  
  pinMode(trig_pin, OUTPUT);
  pinMode(echo_pin, INPUT);
  pinMode(buzzer_pin, OUTPUT);
  pinMode(ledPin, OUTPUT);
  
  Serial.begin(115200); // Starts the serial communication
}

void loop() {
  digitalWrite(trig_pin, LOW);
  delayMicroseconds(2);
  digitalWrite(trig_pin, HIGH);
  delayMicroseconds(10);
  digitalWrite(trig_pin, LOW);

  duration = pulseIn(echo_pin, HIGH);
  distance_cm = (duration * 0.034) / 2.0;

  if (distance_cm >= 20 || distance_cm <= 0) {
    digitalWrite(buzzer_pin, LOW);
    digitalWrite(ledPin, LOW);
    
    lcd.setCursor(0, 0);
    lcd.print("NO OBJECT[>20cm]");
    Serial.print("NO OBJECT[>20cm]");

    lcd.setCursor(0, 1);
    lcd.print("OBJECT DETECTED!");
    Serial.print("OBJECT DETECTED");
    
    delay(1000);
    lcd.clear();
  } else {
    digitalWrite(buzzer_pin, HIGH);
    digitalWrite(ledPin, HIGH);
    
    lcd.setCursor(0, 0);
    lcd.print("DISTANCE(cm):");
    lcd.print(distance_cm);
    Serial.print("DISTANCE(cm):");
    Serial.println(distance_cm);
    
    lcd.setCursor(0, 1);
    lcd.print("OBJECT DETECTED!");
    Serial.print("OBJECT DETECTED!");
    
    delay(1000);
    lcd.clear();
  }

  // Prints the distance on the Serial Monitor
  Serial.print("Distance: ");
  Serial.println(distance_cm);
}
